/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gestion_cafeterias.interfaz_grafica.empleado;

import com.gestion_cafeterias.acceso.AccesoEmpleado;
import com.gestion_cafeterias.modelo.Empleado;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAM1B07
 */
public class ConsultaEmpleados extends javax.swing.JFrame {

    DefaultTableModel modelTabla = new DefaultTableModel();

    /**
     * Creates new form ConsultaEmpleados
     */
    public ConsultaEmpleados() {
        initComponents();

        modelTabla.addColumn("ID");
        modelTabla.addColumn("Nombre");
        modelTabla.addColumn("Salario €");
        modelTabla.addColumn("Fecha de Alta");
        modelTabla.addColumn("DNI");

        mostrarEmpleados();

    }

    private void mostrarEmpleados() {
        try {
            List<Empleado> listaEmpleados;

            listaEmpleados = AccesoEmpleado.consultarTodos();

            String[] datos = new String[5];

            for (Empleado empleado : listaEmpleados) {

                datos[0] = String.valueOf(empleado.getIdEmpleado());
                datos[1] = empleado.getNombre();
                datos[2] = String.valueOf(empleado.getSalario());
                datos[3] = empleado.getFechaAlta();
                datos[4] = empleado.getDni();
                modelTabla.addRow(datos);

            }
            jTableTodos.setModel(modelTabla);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConsultaEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            lblError.setText("Ha ocurrido algun error perdone las molestias");
        }
    }

    public String getSelectedID() {
        int row = jTableTodos.getSelectedRow();
        String value = jTableTodos.getModel().getValueAt(row, 0).toString();
        return value;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTodos = new javax.swing.JTable();
        lblError = new javax.swing.JLabel();
        botonRefresh = new javax.swing.JButton();
        lblExito = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        botonConsultar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonInsertar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableTodos);

        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        botonRefresh.setText("Actualizar Tabla");
        botonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRefreshActionPerformed(evt);
            }
        });

        lblExito.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblExito.setForeground(new java.awt.Color(102, 204, 0));
        lblExito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 5));

        labelCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCodigo.setText("Codigo:");
        jPanel1.add(labelCodigo);

        txtCodigo.setPreferredSize(new java.awt.Dimension(90, 27));
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCodigo);

        botonConsultar.setText("Consultar ");
        botonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarActionPerformed(evt);
            }
        });
        jPanel1.add(botonConsultar);

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEliminar);

        botonInsertar.setText("Insertar");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });
        jPanel1.add(botonInsertar);

        botonActualizar.setText("Actualizar");
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(botonActualizar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botonRefresh))
                            .addComponent(lblExito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonRefresh)
                .addGap(15, 15, 15)
                .addComponent(lblExito, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(lblError)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        try {
            int delay = 1500;
            lblError.setText("");
            String id_empleado = txtCodigo.getText();
            int codigo = Integer.parseInt(id_empleado);
            Empleado empleado = AccesoEmpleado.consultar(codigo);

            if (empleado == null) {
                lblError.setText("No existe ningun empleado con ese codigo");
            } else if (AccesoEmpleado.eliminar(codigo)) {

                Timer timer = new Timer(delay, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        lblExito.setText("");
                        txtCodigo.setText("");
                        modelTabla.setRowCount(0);
                        mostrarEmpleados();
                        ((Timer) e.getSource()).stop();
                    }
                });
                timer.start();
                lblExito.setText("ACCIÓN DE ELIMINAR EXITOSA");
            }

        } catch (NumberFormatException nfe) {
            lblError.setText("Escribe un numero en el cuadro de codigo");
        } catch (ClassNotFoundException cnfe) {
            lblError.setText("Error al conectar con la base de datos");
        } catch (SQLException sqle) {
            lblError.setText("Error con la base de datos");
        } catch (Exception e) {
            lblError.setText("Ha ocurrido algun error perdone las molestias");
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void botonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarActionPerformed
        try {
            lblError.setText("");
            int codigo = Integer.parseInt(txtCodigo.getText());
            Empleado empleado = AccesoEmpleado.consultar(codigo);
            String[] datos = new String[5];
            if (empleado == null) {
                lblError.setText("No existe ningun empleado con ese codigo");
            } else {
                modelTabla.setRowCount(0);
                datos[0] = String.valueOf(empleado.getIdEmpleado());
                datos[1] = empleado.getNombre();
                datos[2] = String.valueOf(empleado.getSalario());
                datos[3] = empleado.getFechaAlta();
                datos[4] = empleado.getDni();
                modelTabla.addRow(datos);
            }

        } catch (NumberFormatException nfe) {
            lblError.setText("Escribe un numero en el cuadro de codigo");
        } catch (ClassNotFoundException cnfe) {
            lblError.setText("Error al conectar con la base de datos");
        } catch (SQLException sqle) {
            lblError.setText("Error con la base de datos");
        } catch (Exception e) {
            lblError.setText("Ha ocurrido algun error perdone las molestias");
        }
    }//GEN-LAST:event_botonConsultarActionPerformed

    private void botonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRefreshActionPerformed
        modelTabla.setRowCount(0);
        mostrarEmpleados();
        txtCodigo.setText("");
    }//GEN-LAST:event_botonRefreshActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        try {
            String id_empleado = txtCodigo.getText();
            Empleado empleado = AccesoEmpleado.consultar(Integer.parseInt(txtCodigo.getText()));
            if (empleado == null) {
                lblError.setText("No existe ningun empleado con ese codigo");
            } else {
                ActualizarEmpleado actualizar = new ActualizarEmpleado(id_empleado);
                actualizar.setVisible(true);
            }

        } catch (NumberFormatException nfe) {
            lblError.setText("Escribe un numero en el cuadro de codigo para poder actualizar");
        } catch (ClassNotFoundException cnfe) {
            lblError.setText("Error al conectar con la base de datos");
        } catch (SQLException sqle) {
            lblError.setText("Error con la base de datos");
        } catch (Exception e) {
            lblError.setText("Ha ocurrido algun error perdone las molestias");
        }
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        InsertarEmpleado insertar = new InsertarEmpleado();
        insertar.setVisible(true);
    }//GEN-LAST:event_botonInsertarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonConsultar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonRefresh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTodos;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblExito;
    private javax.swing.JTextField txtCodigo;
    // End of variables declaration//GEN-END:variables
}
